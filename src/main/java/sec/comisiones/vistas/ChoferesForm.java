package sec.comisiones.vistas;


import java.text.SimpleDateFormat;

import org.vaadin.dialogs.ConfirmDialog;

import sec.comisiones.dao.CategoriasDAO;
import sec.comisiones.dao.ChoferesDAO;
import sec.comisiones.dao.ProgramasDAO;
import sec.comisiones.manager.ChoferesManager;
import sec.comisiones.mapeos.Choferes;
import sec.comisiones.mapeos.Usuarios;

import sec.comisiones.vistas.ListadoEmpleadosForm;
import com.agpro.controles.Formateos;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.Theme;
import com.vaadin.data.Item;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.fieldgroup.FieldGroup.CommitException;
import com.vaadin.data.validator.NullValidator;
import com.vaadin.data.validator.LongRangeValidator;
import com.vaadin.server.FontAwesome;
import com.vaadin.shared.ui.datefield.Resolution;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.NativeButton;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Notification.Type;



@SuppressWarnings("serial")
@Theme("comisiones")
public class ChoferesForm extends CustomComponent {

	private VerticalLayout mainLayout;
	private Panel contenedorPanel;
	private VerticalLayout verticalLayout_1;
	final ChoferesManager tblUser = new ChoferesManager();
	private Table tb;
	NativeButton btnNew=new NativeButton();
	Usuarios usrLog = new Usuarios();
	
	ChoferesDAO chofDAO = new ChoferesDAO();
	ProgramasDAO progDAO = new ProgramasDAO();
	CategoriasDAO catDAO = new CategoriasDAO();
	
	
	SimpleDateFormat dateFormat= new SimpleDateFormat("dd/MM/yyyy");
	
	
	
	
	public ChoferesForm() {
		ini();
	}
	
	public ChoferesForm(Usuarios usr) {
		usrLog= usr;
		ini();
	}

	
///////////////////////////////////////////////	
///////////////////////////////////////////////
	private void ini(){
		buildMainLayout();
		setCompositionRoot(mainLayout);	
	
		
		btnNew.setCaptionAsHtml(true);
		btnNew.setCaption(FontAwesome.PLUS.getHtml() + " Nuevo" );
		
		tb = tblUser.cargaTabla();
		verticalLayout_1.removeAllComponents();
		verticalLayout_1.addComponent(btnNew);
		verticalLayout_1.addComponent(tb);
		verticalLayout_1.setExpandRatio(tb, 1.0f);

		tb.setSelectable(true);
		btnNew.setEnabled(true);
		
		final MyForm myform = new MyForm(usrLog);
		myform.setVisible(true);
		verticalLayout_1.addComponent(myform);
		
		// Handle selection change.
		tb.addValueChangeListener(new ValueChangeListener() {
		    public void valueChange(ValueChangeEvent event) {
		    	Object selectedItemId = event.getProperty().getValue();
			    if (selectedItemId != null) {
			//    	Notification.show("item selected: "+  tb.getValue(), Notification.Type.HUMANIZED_MESSAGE ); 
		            myform.setItemDataSource(tb.getItem(selectedItemId));
		            if (! myform.isVisible()) {
		                tb.setCurrentPageFirstItemId(selectedItemId);
		                myform.setVisible(true);}
			    	} else {
				   //    	Notification.show("Nothing selected ", Notification.Type.HUMANIZED_MESSAGE );
					//    	myform.setVisible(false);
					    	ini();
					    }
			    }
		});
		
		
		btnNew.addClickListener(new ClickListener(){
			public void buttonClick(ClickEvent event) {
				
				ChoferesDAO ud=new ChoferesDAO();
				Item item = ud.getItem();
							
	//		    Notification.show("item selected: "+ item.getItemPropertyIds(), Notification.Type.HUMANIZED_MESSAGE ); 
			    	
	            myform.setItemDataSource(item);
     //			if (! myform.isVisible()) {
		                myform.setVisible(true);
	//           }
				}
		});
		
		
	}
	

///////////////////////////////////////////////	
///////////////////////////////////////////////	
	// Show item details here
	class MyForm extends FormLayout {

		TextField id = new TextField("id");
	    TextField numCarnet = new TextField("Nº Registro");
	    DateField fechaVencimiento = new DateField("Fecha Vencimiento");
	    TextField idEmpleado = new TextField("id Empleado");
	    TextField descChofer = new TextField("Nombre Empleado");
	    ComboBox idCategoria = new ComboBox("Categoria");
	    ComboBox idPrograma = new ComboBox("Programa");
	    
	    NativeButton btnEmpleado = new NativeButton("...");
	    
	    HorizontalLayout hl_2= new HorizontalLayout(id,numCarnet,fechaVencimiento,idEmpleado,descChofer,btnEmpleado);
	    HorizontalLayout hl_3= new HorizontalLayout(idPrograma,idCategoria);
	    
	    
	    
		NativeButton btnGraba = new NativeButton("Actualiza");
	    NativeButton btnElimina = new NativeButton("Elimina");
	    NativeButton btnCancela = new NativeButton("Cancela");
	    HorizontalLayout hl_1= new HorizontalLayout(btnGraba,btnElimina,btnCancela);
	    Usuarios usrLog = new Usuarios();
	    
	    public MyForm(){

	    }
	    
	    public MyForm(Usuarios us){
	    	usrLog=us;
	    }
	    
	    public void setItemDataSource(Item item) {
	    	idPrograma.setContainerDataSource(progDAO.getAllProgramasContainer());
	    	idCategoria.setContainerDataSource(catDAO.getAllCategoriasContainer());
	        addComponents(hl_2,hl_3,hl_1);
	//        FieldGroup binder = new FieldGroup(item);
	//        binder.bindMemberFields(this);
	        
	        hl_2.setSpacing(true);
	        hl_2.setComponentAlignment(btnEmpleado, Alignment.BOTTOM_LEFT);
	        hl_3.setSpacing(true);
	        // Bind the form
	        final ErrorfulFieldGroup binder = new ErrorfulFieldGroup(item);
	        binder.setBuffered(true);
	        binder.bindMemberFields(this);

	        // Have an error display
	        final ErrorLabel formError = new ErrorLabel();
	        formError.setWidth(null);
	      //addComponent(formError);
	        
	        binder.setErrorDisplay(formError);
            
	        
	        
	        id.setEnabled(false);
	    	idEmpleado.setEnabled(false);
	    	descChofer.setEnabled(false);
	    	
	    	
	        btnGraba.addStyleName("Small");	        
	        btnGraba.setImmediate(true);
	    //	btnModifica.setDescription("Guarda Modificaciones");

	    	
	    	btnElimina.addStyleName("Small");
	    	
	    	
	    	id.setWidth(6,Unit.EM);
	    	idEmpleado.setWidth(6,Unit.EM);
	    	idCategoria.setWidth(9,Unit.EM);
	    	idPrograma.setWidth(12,Unit.EM);
	    	descChofer.setWidth(25,Unit.EM);
	    	fechaVencimiento.setWidth(9,Unit.EM);
	    	
	    	
	    	
	    	
	    	idCategoria.addStyleName("Small");
	    	idCategoria.setRequired(true);
	    	idCategoria.setRequiredError("Campo Obligatorio");
	    	idCategoria.setItemCaptionPropertyId("nombre");
	    	idCategoria.setImmediate(true);
	    	idCategoria.setValidationVisible(true);
	    	idCategoria.setInvalidAllowed(false);
	    	idCategoria.setNullSelectionAllowed(true);
	    	idCategoria.setTextInputAllowed(false);
	    	
	    	
	    	idPrograma.addStyleName("Small");
	    	idPrograma.setRequired(true);
	    	idPrograma.setRequiredError("Campo Obligatorio");
	    	idPrograma.setItemCaptionPropertyId("nombre");
	    	idPrograma.setImmediate(true);
	    	idPrograma.setValidationVisible(true);
	    	idPrograma.setInvalidAllowed(true);
	    	idPrograma.setNullSelectionAllowed(true);
	    	idPrograma.setTextInputAllowed(false);
	    	
	 //   	numCarnet.addStyleName("numeroCentro");
	    	numCarnet.setRequired(true);
	    	numCarnet.setRequiredError("Campo Obligatorio");
	 //   	numCarnet.addValidator(new NullValidator("Must not be null", false));
	    	numCarnet.addValidator(new LongRangeValidator("Solo números de 0 a 9.999.999.999",0l,9999999999l));
	 //   	numCarnet.addValidator(new RegexpValidator("[0-9]*", "Solo 10 digitos"));
	    	numCarnet.setImmediate(true);
	    	numCarnet.setValidationVisible(true);
	    	numCarnet.setMaxLength(10);
	    	
	    	
		    fechaVencimiento.setDateFormat("dd/MM/yyyy");
		    fechaVencimiento.setResolution(Resolution.DAY);
		    fechaVencimiento.setLenient(true);
		    fechaVencimiento.setRequired(true);
		    fechaVencimiento.setRequiredError("Campo Obligatorio");
		    
	    	
		    descChofer.addValidator(new NullValidator("Este campo no puede ser nulo", false));
		    descChofer.setImmediate(true);
		    descChofer.setValidationVisible(true);
		    
	    	
	    	tb.setSelectable(false);
	    	btnNew.setEnabled(false);
	    	
	    	if ((Integer) item.getItemProperty("id").getValue() == 0){
	    		btnGraba.setCaption("Graba Nuevo");
				btnElimina.setEnabled(false);
				idPrograma.setValue(null);
				idCategoria.setValue(null);
				tb.setSelectable(false);
				
	    	} else{
	    		btnEmpleado.setEnabled(false);
//				idPrograma.setEnabled(true);
//				idPrograma.setReadOnly(false);
//				idCategoria.setEnabled(true);
//				idCategoria.setReadOnly(false);
	    		int valor=0;
	    		if (!idCategoria.getValue().equals(null)){
	    			valor=(int)idCategoria.getValue();
	    		}
	    		idCategoria.setContainerDataSource(catDAO.getAllCategoriasContainer());
	    		idCategoria.setValue(valor);

	    		if (!idPrograma.getValue().equals(null)){
	    			valor=(int)idPrograma.getValue();
	    		}
	    		idPrograma.setContainerDataSource(progDAO.getAllProgramasContainer());
	    		idPrograma.setValue(valor);
	    	}
	    	
	    	

	    		

	   
	    	
		//////////////////////////////////
		///////// BOTONES ////////////////
		//////////////////////////////////	   
	    	
	    	btnGraba.addClickListener(new ClickListener(){
				public void buttonClick(ClickEvent event) {
						try {
							binder.commit();
							
							Choferes it = cargaObjeto();
							
							
							if(btnGraba.getCaption()=="Graba Nuevo"){
								try {
									if (chofDAO.existe(Integer.parseInt(idEmpleado.getValue()))==0){
										chofDAO.agrega(it, usrLog.getId()); 
										ini();
										
									}else{
										Notification.show("Ya se encuentra registrado el chofer "+ descChofer.getValue(), Type.ERROR_MESSAGE);
											
									}	
								} catch (NumberFormatException e) {
									e.printStackTrace();
								}
							} else if (btnGraba.getCaption()=="Actualiza"){
								chofDAO.modifica(it, usrLog.getId()); 		
								ini();
									
							}
						} catch (CommitException e) {
							e.printStackTrace();
						}

				}
			});
	        
        
	        btnElimina.addClickListener(new ClickListener(){
	        	public void buttonClick(ClickEvent event) {
					if (chofDAO.existenRegistrosRelacionados(Integer.parseInt(id.getValue()))==0) {
						ConfirmDialog.show(getUI(), "Confirmar", "¿Desea eliminar el registro seleccionado?","Sí", "No", new ConfirmDialog.Listener() {
							public void onClose(ConfirmDialog dialog) {
						          if (dialog.isConfirmed()) {
						               // C�digo S�
						        	  chofDAO.elimina(Integer.parseInt(id.getValue()), usrLog.getId()); 		
										ini();
						          } else {
						               // C�digo No     
						          }
						     }
						});

					} else {
						Notification.show("No se puede eliminar el registro seleccionado"," Existen registros asociados.",Type.ERROR_MESSAGE);
						ini();
					}
				}
	        });
	
						

	        
	        
	        btnCancela.addClickListener(new ClickListener(){
				public void buttonClick(ClickEvent event) {
						ini();
					}
			});

	        
	        btnEmpleado.addClickListener(new ClickListener(){
				public void buttonClick(ClickEvent event) {
//					UI.getCurrent().addWindow(new MySubEmpleados(0,"Empleados", (newValue)  -> {
//							descChofer.setValue(newValue.getDescEmpleado());
//							idEmpleado.setValue(String.valueOf(newValue.getId()));
//			                //    Notification.show("Saved: " + newValue , Type.ERROR_MESSAGE);
//			                }));
				
				
					UI.getCurrent().addWindow(new ListadoEmpleadosForm((objeto)  -> {
						descChofer.setValue(String.valueOf(objeto.getDescEmpleado()));
						idEmpleado.setValue(String.valueOf(objeto.getId()));
					}));
				
				
				}
			});
	        
	        
	    }
	    
	    
	    
	    
	    private Choferes cargaObjeto(){
	    	Choferes it= new Choferes();
	    	
	    	long num=new Formateos().convertirComaPorPunto(numCarnet.getValue()).longValue();
	    	
	    	it.setId(Integer.parseInt(id.getValue()));
	    	it.setIdCategoria((int)idCategoria.getValue());
	    	it.setIdEmpleado(Integer.parseInt(idEmpleado.getValue()));
	    	it.setIdPrograma((int)idPrograma.getValue());
	    	it.setNumCarnet(num);
	    	it.setFechaVencimiento(fechaVencimiento.getValue());
	    	
	    	return it;
	    }
	    
	    
	};


///////////////////////////////////////////////	
///////////////////////////////////////////////

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setSizeFull();
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		//  verticalSplitPanel_1
	    contenedorPanel = buildContenedorPanel();
		mainLayout.addComponent(contenedorPanel);
 
		return mainLayout;
	}

	private Panel buildContenedorPanel() {
		// common part: create layout
		contenedorPanel = new Panel();
		contenedorPanel.setImmediate(false);
		contenedorPanel.setWidth("100.0%");
		contenedorPanel.setHeight("100.0%");
		contenedorPanel.setSizeFull();
		
		// verticalLayout_1
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("100.0%");
		verticalLayout_1.setHeight("98.0%");
		verticalLayout_1.setMargin(true);
		contenedorPanel.setContent(verticalLayout_1);
		
		return contenedorPanel;
	}
	

}
