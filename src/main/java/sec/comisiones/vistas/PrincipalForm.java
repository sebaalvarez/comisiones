package sec.comisiones.vistas;


import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.function.Consumer;

import sec.comisiones.dao.MenuGeneralDAO;
import sec.comisiones.mapeos.Usuarios;
import sec.comisiones.vistas.CambioPasswordForm;
import sec.comisiones.vistas.LoginForm;
import sec.comisiones.vistas.LogAuditoriaMenuForm;

import sec.comisiones.vistas.ImagenForm;
import com.agpro.controles.Conexion;
import com.agpro.controles.UtilUI;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.server.Sizeable;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.Label;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.NativeButton;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.MenuBar.MenuItem;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Tree;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Tree.CollapseEvent;
import com.vaadin.ui.Tree.ExpandEvent;


@SuppressWarnings("serial")
public class PrincipalForm extends CustomComponent {
	
	private Panel horizontalCuerpoContenedor;
	Panel panelTree = new Panel();
	private VerticalLayout mainLayout;
	private HorizontalSplitPanel horizontalSplitCuerpo;
	private VerticalLayout verticalLayout_Form;
	private VerticalLayout verticalLayout_Menu;
	private HorizontalLayout horizontalCabecera;
	private VerticalLayout verticalCabecera;
	private Label label_1;
	private Label label_2;
	NativeButton btnPerfil = new NativeButton();
	
	private String flag="";
//	Conexion cn = new Conexion();
	
	String rol="";
	MenuBar menubar = new MenuBar();
	
	Usuarios usrLog=new Usuarios();
	
	public PrincipalForm(Usuarios usr1) {
		Conexion.getConn();
		usrLog=usr1;
		rol=usrLog.getNombreRol();
		ini();
	}
	
	public PrincipalForm() {
		Conexion.getConn();
//		usrLog.setTipoDeUsuario("ADM");
//		rol=usrLog.getNombreRol();
		rol="Administrador";
		usrLog.setNombre("Invitado");
		usrLog.setId(9999);
		ini();
	}
	
	public void ini(){
		
		buildMainLayout();
		setCompositionRoot(mainLayout);

		
		this.label_1.setValue("Usuario: "+ usrLog.getNombre());
		this.label_2.setValue("Rol de Acceso: "+ rol);
		final MenuCreaMenu treeMenu = new MenuCreaMenu();
		
		NativeButton btnCierre = new NativeButton("Salir");
		NativeButton btnVolver = new NativeButton("Volver");
		
		Tree menu = treeMenu.getMenuArbol(rol);
		verticalLayout_Menu.addComponent(menu);

		verticalLayout_Form.removeAllComponents();
		ImagenForm vusuarios0 = new ImagenForm();
		verticalLayout_Form.addComponent(vusuarios0);
		
		
		
		menu.addExpandListener(new Tree.ExpandListener() {
			@Override
			public void nodeExpand(ExpandEvent event) {
				//Notification.show("Expande " +  event.getItemId(),Notification.Type.HUMANIZED_MESSAGE);
			}
		});
		
		menu.addCollapseListener(new Tree.CollapseListener() {
			@Override
			public void nodeCollapse(CollapseEvent event) {
				//Notification.show("Contrae " +  event.getItemId());
			}
		});

		
		menu.addItemClickListener(new ItemClickEvent.ItemClickListener() {
			@SuppressWarnings("deprecation")
			public void itemClick(ItemClickEvent event) {
				if (event.getButton() == ItemClickEvent.BUTTON_LEFT){
				//	Notification.show("Left click en "+ treeMenu.getMenuArbol());
				//	Notification.show("Left click en "+ event.getItemId());
				/*
					if (event.getItemId()=="Usuarios" ) {
							verticalLayout_Form.removeAllComponents();
							FormUsuariosa vusuarios = new FormUsuariosa();
							verticalLayout_Form.addComponent(vusuarios);
						} 
						else {
							verticalLayout_Form.removeAllComponents();
						}
					*/
					accesoProgramas((String)event.getItemId());
					           
				}
				
			}


		});


		menubar.addStyleName("mybarmenu");
		
		// Define a common menu command for all the menu items.
		MenuBar.Command mycommand = new MenuBar.Command() {
		    public void menuSelected(MenuItem selectedItem) {
	//	        Notification.show("Ordered a " + selectedItem.getText() +" from menu.", Type.ERROR_MESSAGE);
		        accesoProgramas((String) selectedItem.getText());
		    }  
		};
		

		/*
		// A top-level menu item that opens a submenu
		MenuItem drinks = menubar.addItem("Producci�n", null, null);

			// Submenu item with a sub-submenu
			MenuItem hots = drinks.addItem("Planificaci�n", null, mycommand);
//			hots.addItem("Elimina Planificaci�n",new ThemeResource("icons/tea-16px.png"),   mycommand);
//			hots.addItem("Coffee",new ThemeResource("icons/coffee-16px.png"), mycommand);
	
			// Another submenu item with a sub-submenu
			MenuItem colds = drinks.addItem("Elimina Planificaci�n", null, mycommand);
//			colds.addItem("Milk",      null, mycommand);
//			colds.addItem("Weissbier", null, mycommand);

		// Another top-level item
		MenuItem snacks = menubar.addItem("Snacks", null, null);
			snacks.addItem("Weisswurst", null, mycommand);
			snacks.addItem("Bratwurst",  null, mycommand);
			snacks.addItem("Currywurst", null, mycommand);
		     

		// Yet another top-level item
		MenuItem servs = menubar.addItem("Services", null, null);
			servs.addItem("Car Service", null, mycommand);
*/		
		
		
		MenuGeneralDAO menuPadre = new MenuGeneralDAO();
		MenuGeneralDAO menuHijo = new MenuGeneralDAO();
		
		ResultSet rsPadre = menuPadre.getMenuRolPadre(rol);
		try {
		    MenuItem drinks;

		    while(rsPadre.next()) {
			    String padre = rsPadre.getString("padre");
			    

			    ResultSet rsHijo = menuHijo.getMenuRolHijo(rol, padre);
			    rsHijo.last();
			    int numRowsHijo = rsHijo.getRow(); 
			    rsHijo.beforeFirst();
			    if(numRowsHijo==0){
					drinks = menubar.addItem(padre, null, mycommand);
				}else{
					drinks = menubar.addItem(padre, null, null);
				}
				while(rsHijo.next()) {
					String hijo = rsHijo.getString("hijo");
					@SuppressWarnings("unused")
					MenuItem hots = drinks.addItem(hijo, null, mycommand);
				}
		    }
		} catch (SQLException e) {
			e.printStackTrace();
		}

	    
		btnPerfil.addClickListener(new ClickListener(){
			public void buttonClick(ClickEvent event) {
				UI.getCurrent().addWindow(new MySubCambioPassword(usrLog, btnCierre, btnVolver, (newValue)  -> {}));
			}
		});
		
	
	}
	


	
	
	protected void accesoProgramas(String acceso) {
		 switch(acceso) {
		 
		 case "Usuarios": 
				verticalLayout_Form.removeAllComponents();
				UsuariosForm vUsuarios = new UsuariosForm(usrLog);
				verticalLayout_Form.addComponent(vUsuarios);
				break;

		 case "Roles": 
				verticalLayout_Form.removeAllComponents();
				RolesForm vRoles = new RolesForm(usrLog);
				verticalLayout_Form.addComponent(vRoles);
				break;
				
		 case "Categorias": 
				verticalLayout_Form.removeAllComponents();
				CategoriasForm vCategorias = new CategoriasForm(usrLog);
				verticalLayout_Form.addComponent(vCategorias);
				break;
				
		 case "Areas": 
				verticalLayout_Form.removeAllComponents();
				AreasForm vAreas = new AreasForm(usrLog);
				verticalLayout_Form.addComponent(vAreas);
				break;	
				
		 case "Estados": 
				verticalLayout_Form.removeAllComponents();
				EstadosForm vEstados = new EstadosForm(usrLog);
				verticalLayout_Form.addComponent(vEstados);
				break;	
				
		 case "Especialidades": 
				verticalLayout_Form.removeAllComponents();
				EspecialidadesForm vEspecialidades = new EspecialidadesForm(usrLog);
				verticalLayout_Form.addComponent(vEspecialidades);
				break;						

		 case "Programas": 
				verticalLayout_Form.removeAllComponents();
				ProgramasForm vProgramas = new ProgramasForm(usrLog);
				verticalLayout_Form.addComponent(vProgramas);
				break;
				
		 case "Provincias": 
				verticalLayout_Form.removeAllComponents();
				ProvinciasForm vProvincias = new ProvinciasForm(usrLog);
				verticalLayout_Form.addComponent(vProvincias);
				break;

		 case "Marcas": 
				verticalLayout_Form.removeAllComponents();
				MarcasForm vMarcas = new MarcasForm(usrLog);
				verticalLayout_Form.addComponent(vMarcas);
				break;
		
		 case "Tipos de Vehículos": 
				verticalLayout_Form.removeAllComponents();
				TiposVehiculosForm vTipoVehiculo = new TiposVehiculosForm(usrLog);
				verticalLayout_Form.addComponent(vTipoVehiculo);
				break;
				
		 case "Localidades": 
				verticalLayout_Form.removeAllComponents();
				LocalidadesForm vLocalidades = new LocalidadesForm(usrLog);
				verticalLayout_Form.addComponent(vLocalidades);
				break;

		 case "Modelos": 
				verticalLayout_Form.removeAllComponents();
				ModelosForm vModelos = new ModelosForm(usrLog);
				verticalLayout_Form.addComponent(vModelos);
				break;

		 case "Vehículos": 
				verticalLayout_Form.removeAllComponents();
				VehiculosForm vVehiculos = new VehiculosForm(usrLog);
				verticalLayout_Form.addComponent(vVehiculos);
				break;
				
		 case "Empleados": 
				verticalLayout_Form.removeAllComponents();
				EmpleadosForm vEmpleados = new EmpleadosForm(usrLog);
				verticalLayout_Form.addComponent(vEmpleados);
				break;

		 case "Choferes": 
				verticalLayout_Form.removeAllComponents();
				ChoferesForm vChoferes = new ChoferesForm(usrLog);
				verticalLayout_Form.addComponent(vChoferes);
				break;


		 case "Carga Comisión": 
				verticalLayout_Form.removeAllComponents();
				ComisionesMenuForm vComisiones = new ComisionesMenuForm(usrLog,"carga");
				verticalLayout_Form.addComponent(vComisiones);
				break;	
				
		 case "Imp. Comisión Aut.": 
				verticalLayout_Form.removeAllComponents();
				ComisionesMenuForm vComisiones5 = new ComisionesMenuForm(usrLog,"impresion");
				verticalLayout_Form.addComponent(vComisiones5);
				break;	
				
		 case "Asigna Vehículo": 
				verticalLayout_Form.removeAllComponents();
				ComisionesMenuForm vComisiones1 = new ComisionesMenuForm(usrLog,"asignaVehiculo");
				verticalLayout_Form.addComponent(vComisiones1);
				break;		
				
		 case "Autoriza Comisión": 
				verticalLayout_Form.removeAllComponents();
				ComisionesMenuForm vComisiones2 = new ComisionesMenuForm(usrLog,"autoriza");
				verticalLayout_Form.addComponent(vComisiones2);
				break;		
				
		 case "Rendición Comisiones": 
				verticalLayout_Form.removeAllComponents();
				ComisionesMenuForm vComisiones4 = new ComisionesMenuForm(usrLog,"rendicion");
				verticalLayout_Form.addComponent(vComisiones4);
				break;	
				
		 case "Reserva Chof/Veh": 
				verticalLayout_Form.removeAllComponents();
				ReservasMenuForm vReservas = new ReservasMenuForm(usrLog,"carga","todos");
				verticalLayout_Form.addComponent(vReservas);
				break;
				
		 case "Asigna Expediente": 
				verticalLayout_Form.removeAllComponents();
				ComisionesMenuForm vComisiones7 = new ComisionesMenuForm(usrLog,"asignaExpediente");
				verticalLayout_Form.addComponent(vComisiones7);
				break;	
				
		 case "Comisiones Gral.": 
				verticalLayout_Form.removeAllComponents();
				ComisionesMenuForm vComisiones3 = new ComisionesMenuForm(usrLog,"cnsTodas");
				verticalLayout_Form.addComponent(vComisiones3);
				break;
				
		 case "Comisiones": 
				verticalLayout_Form.removeAllComponents();
				ComisionesMenuForm vComisiones6 = new ComisionesMenuForm(usrLog,"cnsGeneradas");
				verticalLayout_Form.addComponent(vComisiones6);
				break;	
				
		 case "Reservas": 
				verticalLayout_Form.removeAllComponents();
				ReservasMenuForm vReservas1 = new ReservasMenuForm(usrLog,"cns","todos");
				verticalLayout_Form.addComponent(vReservas1);
				break;
				
		 case "Choferes Asignados": 
				verticalLayout_Form.removeAllComponents();
				ReservasMenuForm vReservasCh = new ReservasMenuForm(usrLog,"cns","choferes");
				verticalLayout_Form.addComponent(vReservasCh);
				break;
				
		 case "Vehículos Asignados": 
				verticalLayout_Form.removeAllComponents();
				ReservasMenuForm vReservasVe = new ReservasMenuForm(usrLog,"cns","vehiculos");
				verticalLayout_Form.addComponent(vReservasVe);
				break;
				
		 case "Listado Vehículos": 
			 
			 	verticalLayout_Form.removeAllComponents();
//			 	VehiculosAsignadosMenuForm vReservasVe1 = new VehiculosAsignadosMenuForm(usrLog,"");
//				verticalLayout_Form.addComponent(vReservasVe1);
				
				verticalLayout_Form.addComponent(new ImagenForm(usrLog,"vehiculosAsignado"));

				
				break;
				
				
		 case "Agregar Entrada Menú": 
			 verticalLayout_Form.removeAllComponents();
				MenuGeneralForm vAgregaMenu = new MenuGeneralForm(usrLog);
				verticalLayout_Form.addComponent(vAgregaMenu);
				break;
				
		 case "Acceso por Rol": 
			 verticalLayout_Form.removeAllComponents();
				MenuPorRolForm vAccesoRol = new MenuPorRolForm(usrLog);
				verticalLayout_Form.addComponent(vAccesoRol);
				break;	
				
				
				
		 case "Log Auditoria": 
			 	verticalLayout_Form.removeAllComponents();
			 	LogAuditoriaMenuForm vLog = new LogAuditoriaMenuForm(usrLog);
				verticalLayout_Form.addComponent(vLog);
				break;	
				
		 case "Salir": 
			 	mainLayout.removeAllComponents();
			 	mainLayout.setMargin(false);
				LoginForm vSalir = new LoginForm();
				mainLayout.addComponent(vSalir);
				break;	


							
		 default:  
	 	//		verticalLayout_Form.removeAllComponents();
		//		ImagenForm vDefault = new ImagenForm();
		//		verticalLayout_Form.addComponent(vDefault);
				
				verticalLayout_Form.removeAllComponents();
				ImagenForm vusuarios01 = new ImagenForm();
				verticalLayout_Form.addComponent(vusuarios01);
		     break;
		 }
		
	}
	
	
	
///////////////////////////////////////////////	
///////////////////////////////////////////////	
//Ventana cambio contraseña
	class MySubCambioPassword extends Window {
	
		public MySubCambioPassword(Usuarios usrLog, NativeButton btnCierre, NativeButton btnVolver,Consumer<String> save) {
			super("Cambio de Contraseña");
			center();
			setModal(true);
			//        setClosable(false);
			setResizable(true);
			this.setWidth(57, Unit.EM);
			this.setHeight(25, Unit.EM);
			VerticalLayout content = new VerticalLayout();
			content.setMargin(true);
			content.setSpacing(true);
			
			
			btnVolver.addClickListener(new ClickListener(){
				public void buttonClick(ClickEvent event) {
					close();
				}
			});
			
			btnCierre.addClickListener(new ClickListener(){
				public void buttonClick(ClickEvent event) {
					close();
					mainLayout.removeAllComponents();
					mainLayout.setMargin(false);
					LoginForm vSalir = new LoginForm();
					mainLayout.addComponent(vSalir);
			
				}
			});
			
			CambioPasswordForm vusuarios6 = new CambioPasswordForm(usrLog,flag,btnCierre,btnVolver);
			content.addComponents(vusuarios6);
			
			setContent(content);
			
			
		
		
		}
	
	}

///////////////////////////////////////////////	
///////////////////////////////////////////////		

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(new MarginInfo(true, false, false, false));
		
		mainLayout.setStyleName("fondoPrincipal");
		
		
		// horizontalLayout_1
		horizontalCabecera = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalCabecera);
		
		// horizontalSplitPanel_3
		horizontalCuerpoContenedor = buildHorizontalCuerpoContenedor();
		mainLayout.addComponent(horizontalCuerpoContenedor);
		mainLayout.setExpandRatio(horizontalCuerpoContenedor, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalCabecera = new HorizontalLayout();
		horizontalCabecera.setImmediate(false);
		horizontalCabecera.setWidth("100.0%");
		horizontalCabecera.setHeight(8f,Unit.EM);
		horizontalCabecera.setMargin(false);
		
		// verticalLayout_4
		verticalCabecera = buildVerticalLayout_4();
		horizontalCabecera.addComponent(verticalCabecera);
		
		return horizontalCabecera;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_4() {
		// common part: create layout
		verticalCabecera = new VerticalLayout();
		verticalCabecera.setImmediate(false);
		verticalCabecera.setSizeFull();
		verticalCabecera.setMargin(false);
		
		verticalCabecera.setStyleName("fondoImagenCabecera");

		// Find the application directory
	//	String basepath = VaadinService.getCurrent().getBaseDirectory().getAbsolutePath();
	//	FileResource resource = new FileResource(new File(basepath + "/WEB-INF/images/logochico.png"));

		
	//	Image image = new Image(null, resource);
	//	image.setHeight("100.0%");
	//	image.setWidth("100.0%");
	//	verticalCabecera.addComponent(image);
	//	verticalCabecera.setComponentAlignment(image, Alignment.TOP_CENTER);
		
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setValue("Label");
		label_1.addStyleName("labelBlanco");
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setValue("Label");
		label_2.addStyleName("labelBlanco");
		
		
		btnPerfil.setCaption("Perfil");
		btnPerfil.setWidth("65px");
		btnPerfil.addStyleName("botonChico");
		
		
		VerticalLayout V1 = new VerticalLayout();
//		V1.setHeight("27px");
//		V1.setWidth("250px");
		V1.setHeight(3f,Unit.EM);
		V1.setWidth(20f,Unit.EM);
		
		V1.setSpacing(true);
		V1.addComponent(label_1);
		V1.setComponentAlignment(label_1, Alignment.TOP_RIGHT);
		V1.addComponent(label_2);
		V1.setComponentAlignment(label_2, Alignment.BOTTOM_RIGHT);
		V1.addComponent(btnPerfil);
		V1.setComponentAlignment(btnPerfil, Alignment.BOTTOM_RIGHT);
		
		verticalCabecera.addComponent(V1);
		verticalCabecera.setComponentAlignment(V1, Alignment.MIDDLE_RIGHT);
		
		verticalCabecera.addComponent(menubar);
		verticalCabecera.setComponentAlignment(menubar, Alignment.MIDDLE_CENTER);
		
		return verticalCabecera;
	}
	
	

	@AutoGenerated
	private Panel buildHorizontalCuerpoContenedor() {
		
		// common part: create layout
		horizontalCuerpoContenedor = new Panel();
		horizontalCuerpoContenedor.setImmediate(false);
		horizontalCuerpoContenedor.setWidth("100.0%");
		horizontalCuerpoContenedor.setHeight(UtilUI.devuelveAltoCuerpo(), Unit.PIXELS);
//		horizontalCuerpoContenedor.setHeight(43.5f,Unit.EM);

//		horizontalSplitPanel_13.setMargin(true)

		
		// common part: create layout
		horizontalSplitCuerpo = new HorizontalSplitPanel();
		horizontalSplitCuerpo.setImmediate(false);
		horizontalSplitCuerpo.setSizeFull();
		horizontalSplitCuerpo.setSplitPosition(18,Unit.PERCENTAGE);

		
//		horizontalSplitPanel_3.setMargin(true);
		horizontalCuerpoContenedor.setContent(horizontalSplitCuerpo);
		
		// verticalLayout_2
		verticalLayout_Menu = new VerticalLayout();
		verticalLayout_Menu.setImmediate(false);
		verticalLayout_Menu.setSizeFull();
		verticalLayout_Menu.setMargin(new MarginInfo(false, false, false, false));
//		verticalLayout_Menu.setMargin(false);
		

	horizontalSplitCuerpo.addComponent(verticalLayout_Menu);
		
		// verticalLayout_3
		verticalLayout_Form = new VerticalLayout();
		verticalLayout_Form.setImmediate(false);
		verticalLayout_Form.setSizeFull();
//		verticalLayout_Form.setHeight("500px");
		verticalLayout_Form.setMargin(false);

		horizontalSplitCuerpo.addComponent(verticalLayout_Form);
		horizontalSplitCuerpo.setSplitPosition(0, Sizeable.Unit.PERCENTAGE);
		return horizontalCuerpoContenedor;
	}

	
}




